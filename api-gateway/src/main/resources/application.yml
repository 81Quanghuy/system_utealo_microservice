eureka:
  instance:
    hostname: localhost
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/


server:
  port: 9000

spring:
  application:
    name: api-gateway
  main:
    web-application-type: reactive
  cloud:
    gateway:
      routes:
        - id: conversation-service
          uri: lb://conversation-service
          predicates:
            - Path=/socket.io/**
          filters:
            - DedupeResponseHeader=Access-Control-Allow-Origin Access-Control-Allow-Credentials

      default-filters:
        - DedupeResponseHeader=Access-Control-Allow-Origin Access-Control-Allow-Credentials

      global-cors:
        add-to-simple-url-handler-mapping: true
        cors-configurations:
          "[/**]":
            allow-credentials: true
            allowed-origins:
              - "http://localhost:3000"
              - "http://localhost:3001"
              - "https://system-utealo.vercel.app"
              - "https://social-media-utealo.vercel.app"
              - "http://192.168.1.10:3000"
              - "http://127.0.0.1/3000"
            allowed-headers:
              - "*"
            allowed-methods:
              - HEAD
              - OPTIONS
              - GET
              - POST
              - PUT
              - DELETE
              - PATCH

      discovery:
        locator:
          enabled: true

springdoc:
  swagger-ui:
    urls:
      - name: group-service
        url: /v1/api-docs/group-service
      - name: user-service
        url: /v1/api-docs/user-service
      - name: conversation-service
        url: /v1/api-docs/conversation-service

resilience4j:
  circuitbreaker:
    instances:
      apiGateway:
        register-health-indicator: true
        event-consumer-buffer-size: 10
        automatic-transition-from-open-to-half-open-enabled: true
        failure-rate-threshold: 50
        minimum-number-of-calls: 5
        permitted-number-of-calls-in-half-open-state: 3
        sliding-window-size: 10
        wait-duration-in-open-state: 5s
        sliding-window-type: COUNT_BASED

management:
  endpoints:
    web:
      exposure:
        include: prometheus
  health:
    circuitbreakers:
      enabled: true
  endpoint:
    health:
      show-details: always
  tracing:
    sampling:
      probability: '1.0'
logging:
  pattern:
    level: "%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]"