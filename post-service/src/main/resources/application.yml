eureka:
  instance:
    hostname: localhost
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/
server:
  port: 8082
spring:
  cache:
    type: redis
  kafka:
    bootstrap-servers: localhost:9092
    producer:
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties:
        [enable.idempotence]: true # check trung lap event
        [max.in.flight.requests.per.connection]: 5 # so luong request toi da tren 1 connection
        [request.timeout.ms]: 10000
      retries: 1
      acks: -1
    consumer:
      value-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      # key-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      properties:
        #spring.deserializer.key.delegate.class: org.springframework.kafka.support.serializer.JsonDeserializer
        spring.deserializer.value.delegate.class: org.springframework.kafka.support.serializer.JsonDeserializer
        spring.json.trusted.packages: '*' # Cấu hình các gói tin tưởng cho JSON deserialization
      auto-offset-reset: earliest
#    consumer:
#      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
#      auto-offset-reset: earliest
  application:
    name: post-service
  data:
    mongodb:
      uri: mongodb+srv://huy:huyvff111@cluster0.wteenm1.mongodb.net/testmongo?retryWrites=true&w=majority
      database: post-service
    redis:
      host: redis-18198.c100.us-east-1-4.ec2.redns.redis-cloud.com
      port: 18198
      password: CnbRHEYhr9xFnvV75vOSPYZXp0KVTSaI

springdoc:
  packages-to-scan: vn.iostar.postservice
  api-docs:
    path: /v3/api-docs/post-service
cloudinary:
    cloud-name: ddccjvlbf
    api-key: 135792485217745
    api-secret: 6XXhPgTw6dZ3x7d43S_x5tIF7oU
